{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\react\\\\native\\\\nextjs-meetup\\\\pages\\\\[meetupId]\\\\index.js\";\nimport React, { Fragment } from \"react\";\nimport MeetUpDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient } from \"mongodb\";\nexport default function MeetUpDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetUpDetail, {\n    image: \"img\",\n    title: \"tit\",\n    address: \"add\",\n    description: \"desc\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://asrinutku:zENGG6oixP6KFiiJ@cluster0.typu5.mongodb.net/nextjs-meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCol = db.collection(\"nextjs-meetups\");\n  const allMeetups = await meetupsCol.find({}, {\n    _id: 1\n  }).toArray();\n  console.log(allMeetups);\n  return {\n    fallback: false,\n    paths: allMeetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data for each meetup\n  const meetupId = context.params.meetupId;\n  return {\n    props: {\n      meetupInfo: {\n        id: meetupId,\n        image: \"img\",\n        title: \"tit\",\n        address: \"add\",\n        description: \"desc\"\n      }\n    },\n    revalidate: 1\n  };\n}","map":{"version":3,"sources":["D:/react/native/nextjs-meetup/pages/[meetupId]/index.js"],"names":["React","Fragment","MeetUpDetail","MongoClient","MeetUpDetails","props","getStaticPaths","client","connect","db","meetupsCol","collection","allMeetups","find","_id","toArray","console","log","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","meetupInfo","id","image","title","address","description","revalidate"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,QAA4B,SAA5B;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC3C,sBACE,QAAC,YAAD;AAAc,IAAA,KAAK,EAAC,KAApB;AAA0B,IAAA,KAAK,EAAC,KAAhC;AAAsC,IAAA,OAAO,EAAC,KAA9C;AAAoD,IAAA,WAAW,EAAC;AAAhE;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMJ,WAAW,CAACK,OAAZ,CACnB,gHADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,UAAU,GAAGD,EAAE,CAACE,UAAH,CAAc,gBAAd,CAAnB;AAEA,QAAMC,UAAU,GAAG,MAAMF,UAAU,CAACG,IAAX,CAAgB,EAAhB,EAAoB;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAApB,EAAgCC,OAAhC,EAAzB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ;AAEA,SAAO;AACLM,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEP,UAAU,CAACQ,GAAX,CAAgBC,MAAD,KAAa;AACjCC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACP,GAAP,CAAWU,QAAX;AAAZ;AADyB,KAAb,CAAf;AAFF,GAAP;AAMD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AAEA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,SAAO;AACLlB,IAAAA,KAAK,EAAE;AACLsB,MAAAA,UAAU,EAAE;AACVC,QAAAA,EAAE,EAAEL,QADM;AAEVM,QAAAA,KAAK,EAAE,KAFG;AAGVC,QAAAA,KAAK,EAAE,KAHG;AAIVC,QAAAA,OAAO,EAAE,KAJC;AAKVC,QAAAA,WAAW,EAAE;AALH;AADP,KADF;AAULC,IAAAA,UAAU,EAAE;AAVP,GAAP;AAYD","sourcesContent":["import React, { Fragment } from \"react\";\r\n\r\nimport MeetUpDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient } from \"mongodb\";\r\n\r\nexport default function MeetUpDetails(props) {\r\n  return (\r\n    <MeetUpDetail image=\"img\" title=\"tit\" address=\"add\" description=\"desc\" />\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://asrinutku:zENGG6oixP6KFiiJ@cluster0.typu5.mongodb.net/nextjs-meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCol = db.collection(\"nextjs-meetups\");\r\n\r\n  const allMeetups = await meetupsCol.find({}, { _id: 1 }).toArray();\r\n\r\n  console.log(allMeetups);\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: allMeetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  // fetch data for each meetup\r\n\r\n  const meetupId = context.params.meetupId;\r\n\r\n  return {\r\n    props: {\r\n      meetupInfo: {\r\n        id: meetupId,\r\n        image: \"img\",\r\n        title: \"tit\",\r\n        address: \"add\",\r\n        description: \"desc\",\r\n      },\r\n    },\r\n    revalidate: 1,\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}