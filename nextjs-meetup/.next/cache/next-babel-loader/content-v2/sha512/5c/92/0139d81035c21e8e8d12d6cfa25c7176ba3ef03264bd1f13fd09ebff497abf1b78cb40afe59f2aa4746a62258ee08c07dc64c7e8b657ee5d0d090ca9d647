{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\react\\\\native\\\\nextjs-meetup\\\\pages\\\\[meetupId]\\\\index.js\";\nimport React, { Fragment } from \"react\";\nimport MeetUpDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nexport default function MeetUpDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetUpDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://asrinutku:zENGG6oixP6KFiiJ@cluster0.typu5.mongodb.net/nextjs-meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCol = db.collection(\"nextjs-meetups\");\n  const allMeetups = await meetupsCol.find({}, {\n    _id: 1\n  }).toArray(); // fetch ids only\n\n  client.close();\n  return {\n    fallback: false,\n    paths: allMeetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data for each meetup\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://asrinutku:zENGG6oixP6KFiiJ@cluster0.typu5.mongodb.net/nextjs-meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCol = db.collection(\"nextjs-meetups\");\n  const selectedMeetup = await meetupsCol.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description\n      }\n    }\n  };\n}","map":{"version":3,"sources":["D:/react/native/nextjs-meetup/pages/[meetupId]/index.js"],"names":["React","Fragment","MeetUpDetail","MongoClient","ObjectId","MeetUpDetails","props","meetupData","image","title","address","description","getStaticPaths","client","connect","db","meetupsCol","collection","allMeetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC3C,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CACnB,gHADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,UAAU,GAAGD,EAAE,CAACE,UAAH,CAAc,gBAAd,CAAnB;AAEA,QAAMC,UAAU,GAAG,MAAMF,UAAU,CAACG,IAAX,CAAgB,EAAhB,EAAoB;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAApB,EAAgCC,OAAhC,EAAzB,CARqC,CAQ+B;;AAEpER,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,UAAU,CAACO,GAAX,CAAgBC,MAAD,KAAa;AACjCC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AADyB,KAAb,CAAf;AAFF,GAAP;AAMD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AAEA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMf,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CACnB,gHADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,UAAU,GAAGD,EAAE,CAACE,UAAH,CAAc,gBAAd,CAAnB;AAEA,QAAMe,cAAc,GAAG,MAAMhB,UAAU,CAACiB,OAAX,CAAmB;AAAEb,IAAAA,GAAG,EAAEhB,QAAQ,CAACwB,QAAD;AAAf,GAAnB,CAA7B;AAEAf,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLhB,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACV2B,QAAAA,EAAE,EAAEF,cAAc,CAACZ,GAAf,CAAmBS,QAAnB,EADM;AAEVpB,QAAAA,KAAK,EAAEuB,cAAc,CAACvB,KAFZ;AAGVC,QAAAA,OAAO,EAAEsB,cAAc,CAACtB,OAHd;AAIVF,QAAAA,KAAK,EAAEwB,cAAc,CAACxB,KAJZ;AAKVG,QAAAA,WAAW,EAAEqB,cAAc,CAACrB;AALlB;AADP;AADF,GAAP;AAWD","sourcesContent":["import React, { Fragment } from \"react\";\r\n\r\nimport MeetUpDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\n\r\nexport default function MeetUpDetails(props) {\r\n  return (\r\n    <MeetUpDetail\r\n      image={props.meetupData.image}\r\n      title={props.meetupData.title}\r\n      address={props.meetupData.address}\r\n      description={props.meetupData.description}\r\n    />\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://asrinutku:zENGG6oixP6KFiiJ@cluster0.typu5.mongodb.net/nextjs-meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCol = db.collection(\"nextjs-meetups\");\r\n\r\n  const allMeetups = await meetupsCol.find({}, { _id: 1 }).toArray(); // fetch ids only\r\n\r\n  client.close();\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: allMeetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  // fetch data for each meetup\r\n\r\n  const meetupId = context.params.meetupId;\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://asrinutku:zENGG6oixP6KFiiJ@cluster0.typu5.mongodb.net/nextjs-meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCol = db.collection(\"nextjs-meetups\");\r\n\r\n  const selectedMeetup = await meetupsCol.findOne({ _id: ObjectId(meetupId) });\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: selectedMeetup._id.toString(),\r\n        title: selectedMeetup.title,\r\n        address: selectedMeetup.address,\r\n        image: selectedMeetup.image,\r\n        description: selectedMeetup.description,\r\n      },\r\n    },\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}